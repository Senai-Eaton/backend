// <auto-generated />
using eaton.agir.repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace eaton.agir.repository.Migrations
{
    [DbContext(typeof(AgirContext))]
    [Migration("20180312231254_BancoInicial")]
    partial class BancoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eaton.agir.domain.Entities.AreaAtuacaoDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("AreaAtuacaos");
                });

            modelBuilder.Entity("eaton.agir.domain.Entities.AreaInteresseDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("AreaInteresses");
                });

            modelBuilder.Entity("eaton.agir.domain.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AreaAtuacaoId");

                    b.Property<int?>("AreaInteresseId");

                    b.Property<string>("Cnpj");

                    b.Property<int?>("EnderecoId");

                    b.Property<string>("RazaoSocial");

                    b.Property<string>("Token");

                    b.Property<string>("email");

                    b.Property<string>("foto");

                    b.Property<string>("senha");

                    b.HasKey("Id");

                    b.HasIndex("AreaAtuacaoId");

                    b.HasIndex("AreaInteresseId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("eaton.agir.domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("Cidade");

                    b.Property<string>("Estado");

                    b.Property<string>("Logradouro");

                    b.Property<int>("Numero");

                    b.HasKey("Id");

                    b.ToTable("enderecos");
                });

            modelBuilder.Entity("eaton.agir.domain.Entities.EventoDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataHora");

                    b.Property<string>("Descricao");

                    b.Property<int?>("LocalId");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.HasIndex("LocalId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("eaton.agir.domain.Entities.VoluntarioDomain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AreaId");

                    b.Property<string>("Cpf");

                    b.Property<DateTime>("DataNasc");

                    b.Property<int?>("EnderecoId");

                    b.Property<string>("Nome");

                    b.Property<string>("Profissao");

                    b.Property<string>("Token");

                    b.Property<string>("email");

                    b.Property<string>("foto");

                    b.Property<string>("senha");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Voluntarios");
                });

            modelBuilder.Entity("eaton.agir.domain.Entities.Empresa", b =>
                {
                    b.HasOne("eaton.agir.domain.Entities.AreaAtuacaoDomain", "AreaAtuacao")
                        .WithMany()
                        .HasForeignKey("AreaAtuacaoId");

                    b.HasOne("eaton.agir.domain.Entities.AreaInteresseDomain", "AreaInteresse")
                        .WithMany()
                        .HasForeignKey("AreaInteresseId");

                    b.HasOne("eaton.agir.domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("eaton.agir.domain.Entities.EventoDomain", b =>
                {
                    b.HasOne("eaton.agir.domain.Entities.Endereco", "Local")
                        .WithMany()
                        .HasForeignKey("LocalId");
                });

            modelBuilder.Entity("eaton.agir.domain.Entities.VoluntarioDomain", b =>
                {
                    b.HasOne("eaton.agir.domain.Entities.AreaInteresseDomain", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("eaton.agir.domain.Entities.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });
#pragma warning restore 612, 618
        }
    }
}
